var settings = require('app/settings');
var React = require('react');
var handlebars = require('handlebars');

module.exports = RendererServer;

function RendererServer() {}

/**
 * Turns a react file and some data into a string of rendered HTML
 * @param reactView The react to be turned into a factory then rendered
 * @param data the data to apply to the react factory.
 * @returns {*}
 */
RendererServer.prototype.render = function render(reactView, data) {
    var layoutVars = {
        'containerId': settings.constants.VIEW_CONTAINER_ID,
        'scriptUrl':   settings.constants.SCRIPT_URL,
        'title':       data.title || "OTL - OverTrack.life",
        'viewContent': React.renderToStaticMarkup(React.createFactory(reactView)(data))
    };

    return wrapWithBase(layoutVars, function (err) {
        return err.message;
    });
};

/**
 * Sends HTML back to the client
 * @param viewHtml
 * @param req
 * @param res
 */
RendererServer.prototype.setView = function setView(viewHtml, req, res) {
    if (!req || !res) {throw new Error('method setView requires req and res objects');}
    res.send(viewHtml);
};

RendererServer.prototype.handleErr = function handleErr(err) {
    console.log('error on server:');
    console.log(err);
};

function wrapWithBase(data, errorHandler) {
    try {
        var base = require('app/renderer/index.hbs');
        return base(data);
    } catch (err) {
        errorHandler(err);
    }
}
